{-# LINE 1 "foo.hs" #-}
#define MIN_VERSION_Cabal(major1,major2,minor) ( (major1) < 3 || (major1) == 3 && (major2) < 12 || (major1) == 3 && (major2) == 12 && (minor) <= 0)
#define MIN_VERSION_Cabal_syntax(major1,major2,minor) ( (major1) < 3 || (major1) == 3 && (major2) < 12 || (major1) == 3 && (major2) == 12 && (minor) <= 0)
#define MIN_VERSION_GLASGOW_HASKELL(ma,mi,pl1,pl2) ( ((ma)*100+(mi)) < __GLASGOW_HASKELL__ || ((ma)*100+(mi)) == __GLASGOW_HASKELL__ && (pl1) < __GLASGOW_HASKELL_PATCHLEVEL1__ || ((ma)*100+(mi)) == __GLASGOW_HASKELL__ && (pl1) == __GLASGOW_HASKELL_PATCHLEVEL1__ && (pl2) <= __GLASGOW_HASKELL_PATCHLEVEL2__ )
#define MIN_VERSION_array(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 5 || (major1) == 0 && (major2) == 5 && (minor) <= 7)
#define MIN_VERSION_base(major1,major2,minor) ( (major1) < 4 || (major1) == 4 && (major2) < 20 || (major1) == 4 && (major2) == 20 && (minor) <= 0)
#define MIN_VERSION_binary(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 8 || (major1) == 0 && (major2) == 8 && (minor) <= 9)
#define MIN_VERSION_bytestring(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 12 || (major1) == 0 && (major2) == 12 && (minor) <= 1)
#define MIN_VERSION_containers(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 7 || (major1) == 0 && (major2) == 7 && (minor) <= 0)
#define MIN_VERSION_deepseq(major1,major2,minor) ( (major1) < 1 || (major1) == 1 && (major2) < 5 || (major1) == 1 && (major2) == 5 && (minor) <= 0)
#define MIN_VERSION_directory(major1,major2,minor) ( (major1) < 1 || (major1) == 1 && (major2) < 3 || (major1) == 1 && (major2) == 3 && (minor) <= 8)
#define MIN_VERSION_exceptions(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 10 || (major1) == 0 && (major2) == 10 && (minor) <= 7)
#define MIN_VERSION_filepath(major1,major2,minor) ( (major1) < 1 || (major1) == 1 && (major2) < 5 || (major1) == 1 && (major2) == 5 && (minor) <= 2)
#define MIN_VERSION_ghc_bignum(major1,major2,minor) ( (major1) < 1 || (major1) == 1 && (major2) < 3 || (major1) == 1 && (major2) == 3 && (minor) <= 0)
#define MIN_VERSION_ghc_boot(major1,major2,minor) ( (major1) < 9 || (major1) == 9 && (major2) < 10 || (major1) == 9 && (major2) == 10 && (minor) <= 0)
#define MIN_VERSION_ghc_boot_th(major1,major2,minor) ( (major1) < 9 || (major1) == 9 && (major2) < 10 || (major1) == 9 && (major2) == 10 && (minor) <= 0)
#define MIN_VERSION_ghc_compact(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 1 || (major1) == 0 && (major2) == 1 && (minor) <= 0)
#define MIN_VERSION_ghc_experimental(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 1 || (major1) == 0 && (major2) == 1 && (minor) <= 0)
#define MIN_VERSION_ghc_heap(major1,major2,minor) ( (major1) < 9 || (major1) == 9 && (major2) < 10 || (major1) == 9 && (major2) == 10 && (minor) <= 0)
#define MIN_VERSION_ghc_internal(major1,major2,minor) ( (major1) < 9 || (major1) == 9 && (major2) < 1001 || (major1) == 9 && (major2) == 1001 && (minor) <= 0)
#define MIN_VERSION_ghc_platform(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 1 || (major1) == 0 && (major2) == 1 && (minor) <= 0)
#define MIN_VERSION_ghc_prim(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 11 || (major1) == 0 && (major2) == 11 && (minor) <= 0)
#define MIN_VERSION_ghc_toolchain(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 1 || (major1) == 0 && (major2) == 1 && (minor) <= 0)
#define MIN_VERSION_ghci(major1,major2,minor) ( (major1) < 9 || (major1) == 9 && (major2) < 10 || (major1) == 9 && (major2) == 10 && (minor) <= 0)
#define MIN_VERSION_haskeline(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 8 || (major1) == 0 && (major2) == 8 && (minor) <= 2)
#define MIN_VERSION_hpc(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 7 || (major1) == 0 && (major2) == 7 && (minor) <= 0)
#define MIN_VERSION_integer_gmp(major1,major2,minor) ( (major1) < 1 || (major1) == 1 && (major2) < 1 || (major1) == 1 && (major2) == 1 && (minor) <= 0)
#define MIN_VERSION_mtl(major1,major2,minor) ( (major1) < 2 || (major1) == 2 && (major2) < 3 || (major1) == 2 && (major2) == 3 && (minor) <= 1)
#define MIN_VERSION_os_string(major1,major2,minor) ( (major1) < 2 || (major1) == 2 && (major2) < 0 || (major1) == 2 && (major2) == 0 && (minor) <= 2)
#define MIN_VERSION_parsec(major1,major2,minor) ( (major1) < 3 || (major1) == 3 && (major2) < 1 || (major1) == 3 && (major2) == 1 && (minor) <= 17)
#define MIN_VERSION_pretty(major1,major2,minor) ( (major1) < 1 || (major1) == 1 && (major2) < 1 || (major1) == 1 && (major2) == 1 && (minor) <= 3)
#define MIN_VERSION_process(major1,major2,minor) ( (major1) < 1 || (major1) == 1 && (major2) < 6 || (major1) == 1 && (major2) == 6 && (minor) <= 19)
#define MIN_VERSION_rts(major1,major2,minor) ( (major1) < 1 || (major1) == 1 && (major2) < 0 || (major1) == 1 && (major2) == 0 && (minor) <= 2)
#define MIN_VERSION_semaphore_compat(major1,major2,minor) ( (major1) < 1 || (major1) == 1 && (major2) < 0 || (major1) == 1 && (major2) == 0 && (minor) <= 0)
#define MIN_VERSION_stm(major1,major2,minor) ( (major1) < 2 || (major1) == 2 && (major2) < 5 || (major1) == 2 && (major2) == 5 && (minor) <= 3)
#define MIN_VERSION_system_cxx_std_lib(major1,major2,minor) ( (major1) < 1 || (major1) == 1 && (major2) < 0 || (major1) == 1 && (major2) == 0 && (minor) <= 0)
#define MIN_VERSION_template_haskell(major1,major2,minor) ( (major1) < 2 || (major1) == 2 && (major2) < 22 || (major1) == 2 && (major2) == 22 && (minor) <= 0)
#define MIN_VERSION_text(major1,major2,minor) ( (major1) < 2 || (major1) == 2 && (major2) < 1 || (major1) == 2 && (major2) == 1 && (minor) <= 1)
#define MIN_VERSION_time(major1,major2,minor) ( (major1) < 1 || (major1) == 1 && (major2) < 12 || (major1) == 1 && (major2) == 12 && (minor) <= 2)
#define MIN_VERSION_transformers(major1,major2,minor) ( (major1) < 0 || (major1) == 0 && (major2) < 6 || (major1) == 0 && (major2) == 6 && (minor) <= 1)
#define MIN_VERSION_unix(major1,major2,minor) ( (major1) < 2 || (major1) == 2 && (major2) < 8 || (major1) == 2 && (major2) == 8 && (minor) <= 5)
#define MIN_VERSION_xhtml(major1,major2,minor) ( (major1) < 3000 || (major1) == 3000 && (major2) < 2 || (major1) == 3000 && (major2) == 2 && (minor) <= 2)
#define VERSION_Cabal "3.12.0.0"
#define VERSION_Cabal_syntax "3.12.0.0"
#define VERSION_array "0.5.7.0"
#define VERSION_base "4.20.0.0"
#define VERSION_binary "0.8.9.2"
#define VERSION_bytestring "0.12.1.0"
#define VERSION_containers "0.7"
#define VERSION_deepseq "1.5.0.0"
#define VERSION_directory "1.3.8.3"
#define VERSION_exceptions "0.10.7"
#define VERSION_filepath "1.5.2.0"
#define VERSION_ghc_bignum "1.3"
#define VERSION_ghc_boot "9.10.0.20240509"
#define VERSION_ghc_boot_th "9.10.0.20240509"
#define VERSION_ghc_compact "0.1.0.0"
#define VERSION_ghc_experimental "0.1.0.0"
#define VERSION_ghc_heap "9.10.0.20240509"
#define VERSION_ghc_internal "9.1001.0"
#define VERSION_ghc_platform "0.1.0.0"
#define VERSION_ghc_prim "0.11.0"
#define VERSION_ghc_toolchain "0.1.0.0"
#define VERSION_ghci "9.10.0.20240509"
#define VERSION_haskeline "0.8.2.1"
#define VERSION_hpc "0.7.0.1"
#define VERSION_integer_gmp "1.1"
#define VERSION_mtl "2.3.1"
#define VERSION_os_string "2.0.2"
#define VERSION_parsec "3.1.17.0"
#define VERSION_pretty "1.1.3.6"
#define VERSION_process "1.6.19.0"
#define VERSION_rts "1.0.2"
#define VERSION_semaphore_compat "1.0.0"
#define VERSION_stm "2.5.3.1"
#define VERSION_system_cxx_std_lib "1.0"
#define VERSION_template_haskell "2.22.0.0"
#define VERSION_text "2.1.1"
#define VERSION_time "1.12.2"
#define VERSION_transformers "0.6.1.1"
#define VERSION_unix "2.8.5.1"
#define VERSION_xhtml "3000.2.2.1"
#define __ASSEMBLER__ 1
#define __GHCVERSION_H__ 
#define __GLASGOW_HASKELL_FULL_VERSION__ "9.10.0.20240509"
#define __GLASGOW_HASKELL_PATCHLEVEL1__ 0
#define __GLASGOW_HASKELL_PATCHLEVEL2__ 20240509
#define __GLASGOW_HASKELL_TH__ 1
#define __GLASGOW_HASKELL__ 910
#define __IO_MANAGER_MIO__ 1
#define __STDC_HOSTED__ 1
#define __STDC_UTF_16__ 1
#define __STDC_UTF_32__ 1
#define __STDC_VERSION__ 201710L
#define linux_BUILD_OS 1
#define wasi_HOST_OS 1
#define wasm32_HOST_ARCH 1
#define x86_64_BUILD_ARCH 1
